{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport MenuList from \"../MenuList/index.js\";\nimport Popover, { PopoverPaper } from \"../Popover/index.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getMenuUtilityClass } from \"./menuClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nconst LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    paper: ['paper'],\n    list: ['list']\n  };\n  return composeClasses(slots, getMenuUtilityClass, classes);\n};\nconst MenuRoot = styled(Popover, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenu',\n  slot: 'Root'\n})({});\nexport const MenuPaper = styled(PopoverPaper, {\n  name: 'MuiMenu',\n  slot: 'Paper'\n})({\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\n  // the menu.\n  maxHeight: 'calc(100% - 96px)',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch'\n});\nconst MenuMenuList = styled(MenuList, {\n  name: 'MuiMenu',\n  slot: 'List'\n})({\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n});\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenu'\n  });\n  const {\n    autoFocus = true,\n    children,\n    className,\n    disableAutoFocusItem = false,\n    MenuListProps = {},\n    onClose,\n    open,\n    PaperProps = {},\n    PopoverClasses,\n    transitionDuration = 'auto',\n    TransitionProps: {\n      onEntering,\n      ...TransitionProps\n    } = {},\n    variant = 'selectedMenu',\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const ownerState = {\n    ...props,\n    autoFocus,\n    disableAutoFocusItem,\n    MenuListProps,\n    onEntering,\n    PaperProps,\n    transitionDuration,\n    TransitionProps,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  const menuListActionsRef = React.useRef(null);\n  const handleEntering = (element, isAppearing) => {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, {\n        direction: isRtl ? 'rtl' : 'ltr'\n      });\n    }\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\n  let activeItemIndex = -1;\n  // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n  React.Children.map(children, (child, index) => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      list: MenuListProps,\n      transition: TransitionProps,\n      paper: PaperProps,\n      ...slotProps\n    }\n  };\n  const rootSlotProps = useSlotProps({\n    elementType: slots.root,\n    externalSlotProps: slotProps.root,\n    ownerState,\n    className: [classes.root, className]\n  });\n  const [PaperSlot, paperSlotProps] = useSlot('paper', {\n    className: classes.paper,\n    elementType: MenuPaper,\n    externalForwardedProps,\n    shouldForwardComponentProp: true,\n    ownerState\n  });\n  const [ListSlot, listSlotProps] = useSlot('list', {\n    className: clsx(classes.list, MenuListProps.className),\n    elementType: MenuMenuList,\n    shouldForwardComponentProp: true,\n    externalForwardedProps,\n    getSlotProps: handlers => ({\n      ...handlers,\n      onKeyDown: event => {\n        handleListKeyDown(event);\n        handlers.onKeyDown?.(event);\n      }\n    }),\n    ownerState\n  });\n  const resolvedTransitionProps = typeof externalForwardedProps.slotProps.transition === 'function' ? externalForwardedProps.slotProps.transition(ownerState) : externalForwardedProps.slotProps.transition;\n  return /*#__PURE__*/_jsx(MenuRoot, {\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: isRtl ? 'right' : 'left'\n    },\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\n    slots: {\n      root: slots.root,\n      paper: PaperSlot,\n      backdrop: slots.backdrop,\n      ...(slots.transition && {\n        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover\n        transition: slots.transition\n      })\n    },\n    slotProps: {\n      root: rootSlotProps,\n      paper: paperSlotProps,\n      backdrop: typeof slotProps.backdrop === 'function' ? slotProps.backdrop(ownerState) : slotProps.backdrop,\n      transition: {\n        ...resolvedTransitionProps,\n        onEntering: (...args) => {\n          handleEntering(...args);\n          resolvedTransitionProps?.onEntering?.(...args);\n        }\n      }\n    },\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration,\n    ownerState: ownerState,\n    ...other,\n    classes: PopoverClasses,\n    children: /*#__PURE__*/_jsx(ListSlot, {\n      actions: menuListActionsRef,\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n      autoFocusItem: autoFocusItem,\n      variant: variant,\n      ...listSlotProps,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\r\n   * An HTML element, or a function that returns one.\r\n   * It's used to set the position of the menu.\r\n   */\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   * @default true\r\n   */\n  autoFocus: PropTypes.bool,\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   * @default false\r\n   */\n  disableAutoFocusItem: PropTypes.bool,\n  /**\r\n   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.\r\n   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\r\n   * @default {}\r\n   */\n  MenuListProps: PropTypes.object,\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\n  onClose: PropTypes.func,\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool.isRequired,\n  /**\r\n   * @ignore\r\n   */\n  PaperProps: PropTypes.object,\n  /**\r\n   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.\r\n   */\n  PopoverClasses: PropTypes.object,\n  /**\r\n   * The props used for each slot inside.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    list: PropTypes.elementType,\n    paper: PropTypes.elementType,\n    root: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   * @default 'auto'\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\r\n   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\r\n   * @default {}\r\n   */\n  TransitionProps: PropTypes.object,\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\r\n   * @default 'selectedMenu'\r\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default Menu;","map":{"version":3,"names":["React","isFragment","PropTypes","clsx","composeClasses","HTMLElementType","useRtl","useSlotProps","MenuList","Popover","PopoverPaper","rootShouldForwardProp","styled","useDefaultProps","getMenuUtilityClass","useSlot","jsx","_jsx","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","useUtilityClasses","ownerState","classes","slots","root","paper","list","MenuRoot","shouldForwardProp","prop","name","slot","MenuPaper","maxHeight","WebkitOverflowScrolling","MenuMenuList","outline","Menu","forwardRef","inProps","ref","props","autoFocus","children","className","disableAutoFocusItem","MenuListProps","onClose","open","PaperProps","PopoverClasses","transitionDuration","TransitionProps","onEntering","variant","slotProps","other","isRtl","autoFocusItem","menuListActionsRef","useRef","handleEntering","element","isAppearing","current","adjustStyleForScrollbar","direction","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","externalForwardedProps","transition","rootSlotProps","elementType","externalSlotProps","PaperSlot","paperSlotProps","shouldForwardComponentProp","ListSlot","listSlotProps","getSlotProps","handlers","onKeyDown","resolvedTransitionProps","anchorOrigin","transformOrigin","backdrop","args","actions","propTypes","anchorEl","oneOfType","func","bool","node","object","string","isRequired","shape","sx","arrayOf","oneOf","number","appear","enter","exit"],"sources":["C:/Users/yogyatanegi/Documents/code/Project/GitHub/exam/URL-Shortener/url-shortener-client/node_modules/@mui/material/esm/Menu/Menu.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport HTMLElementType from '@mui/utils/HTMLElementType';\r\nimport { useRtl } from '@mui/system/RtlProvider';\r\nimport useSlotProps from '@mui/utils/useSlotProps';\r\nimport MenuList from \"../MenuList/index.js\";\r\nimport Popover, { PopoverPaper } from \"../Popover/index.js\";\r\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport { getMenuUtilityClass } from \"./menuClasses.js\";\r\nimport useSlot from \"../utils/useSlot.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst RTL_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'right'\r\n};\r\nconst LTR_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'left'\r\n};\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    paper: ['paper'],\r\n    list: ['list']\r\n  };\r\n  return composeClasses(slots, getMenuUtilityClass, classes);\r\n};\r\nconst MenuRoot = styled(Popover, {\r\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\r\n  name: 'MuiMenu',\r\n  slot: 'Root'\r\n})({});\r\nexport const MenuPaper = styled(PopoverPaper, {\r\n  name: 'MuiMenu',\r\n  slot: 'Paper'\r\n})({\r\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\r\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\r\n  // the menu.\r\n  maxHeight: 'calc(100% - 96px)',\r\n  // Add iOS momentum scrolling for iOS < 13.0\r\n  WebkitOverflowScrolling: 'touch'\r\n});\r\nconst MenuMenuList = styled(MenuList, {\r\n  name: 'MuiMenu',\r\n  slot: 'List'\r\n})({\r\n  // We disable the focus ring for mouse, touch and keyboard users.\r\n  outline: 0\r\n});\r\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiMenu'\r\n  });\r\n  const {\r\n    autoFocus = true,\r\n    children,\r\n    className,\r\n    disableAutoFocusItem = false,\r\n    MenuListProps = {},\r\n    onClose,\r\n    open,\r\n    PaperProps = {},\r\n    PopoverClasses,\r\n    transitionDuration = 'auto',\r\n    TransitionProps: {\r\n      onEntering,\r\n      ...TransitionProps\r\n    } = {},\r\n    variant = 'selectedMenu',\r\n    slots = {},\r\n    slotProps = {},\r\n    ...other\r\n  } = props;\r\n  const isRtl = useRtl();\r\n  const ownerState = {\r\n    ...props,\r\n    autoFocus,\r\n    disableAutoFocusItem,\r\n    MenuListProps,\r\n    onEntering,\r\n    PaperProps,\r\n    transitionDuration,\r\n    TransitionProps,\r\n    variant\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\r\n  const menuListActionsRef = React.useRef(null);\r\n  const handleEntering = (element, isAppearing) => {\r\n    if (menuListActionsRef.current) {\r\n      menuListActionsRef.current.adjustStyleForScrollbar(element, {\r\n        direction: isRtl ? 'rtl' : 'ltr'\r\n      });\r\n    }\r\n    if (onEntering) {\r\n      onEntering(element, isAppearing);\r\n    }\r\n  };\r\n  const handleListKeyDown = event => {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      if (onClose) {\r\n        onClose(event, 'tabKeyDown');\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\r\n  let activeItemIndex = -1;\r\n  // since we inject focus related props into children we have to do a lookahead\r\n  // to check if there is a `selected` item. We're looking for the last `selected`\r\n  // item and use the first valid item as a fallback\r\n  React.Children.map(children, (child, index) => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return;\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n    if (!child.props.disabled) {\r\n      if (variant === 'selectedMenu' && child.props.selected) {\r\n        activeItemIndex = index;\r\n      } else if (activeItemIndex === -1) {\r\n        activeItemIndex = index;\r\n      }\r\n    }\r\n  });\r\n  const externalForwardedProps = {\r\n    slots,\r\n    slotProps: {\r\n      list: MenuListProps,\r\n      transition: TransitionProps,\r\n      paper: PaperProps,\r\n      ...slotProps\r\n    }\r\n  };\r\n  const rootSlotProps = useSlotProps({\r\n    elementType: slots.root,\r\n    externalSlotProps: slotProps.root,\r\n    ownerState,\r\n    className: [classes.root, className]\r\n  });\r\n  const [PaperSlot, paperSlotProps] = useSlot('paper', {\r\n    className: classes.paper,\r\n    elementType: MenuPaper,\r\n    externalForwardedProps,\r\n    shouldForwardComponentProp: true,\r\n    ownerState\r\n  });\r\n  const [ListSlot, listSlotProps] = useSlot('list', {\r\n    className: clsx(classes.list, MenuListProps.className),\r\n    elementType: MenuMenuList,\r\n    shouldForwardComponentProp: true,\r\n    externalForwardedProps,\r\n    getSlotProps: handlers => ({\r\n      ...handlers,\r\n      onKeyDown: event => {\r\n        handleListKeyDown(event);\r\n        handlers.onKeyDown?.(event);\r\n      }\r\n    }),\r\n    ownerState\r\n  });\r\n  const resolvedTransitionProps = typeof externalForwardedProps.slotProps.transition === 'function' ? externalForwardedProps.slotProps.transition(ownerState) : externalForwardedProps.slotProps.transition;\r\n  return /*#__PURE__*/_jsx(MenuRoot, {\r\n    onClose: onClose,\r\n    anchorOrigin: {\r\n      vertical: 'bottom',\r\n      horizontal: isRtl ? 'right' : 'left'\r\n    },\r\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\r\n    slots: {\r\n      root: slots.root,\r\n      paper: PaperSlot,\r\n      backdrop: slots.backdrop,\r\n      ...(slots.transition && {\r\n        // TODO: pass `slots.transition` directly once `TransitionComponent` is removed from Popover\r\n        transition: slots.transition\r\n      })\r\n    },\r\n    slotProps: {\r\n      root: rootSlotProps,\r\n      paper: paperSlotProps,\r\n      backdrop: typeof slotProps.backdrop === 'function' ? slotProps.backdrop(ownerState) : slotProps.backdrop,\r\n      transition: {\r\n        ...resolvedTransitionProps,\r\n        onEntering: (...args) => {\r\n          handleEntering(...args);\r\n          resolvedTransitionProps?.onEntering?.(...args);\r\n        }\r\n      }\r\n    },\r\n    open: open,\r\n    ref: ref,\r\n    transitionDuration: transitionDuration,\r\n    ownerState: ownerState,\r\n    ...other,\r\n    classes: PopoverClasses,\r\n    children: /*#__PURE__*/_jsx(ListSlot, {\r\n      actions: menuListActionsRef,\r\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\r\n      autoFocusItem: autoFocusItem,\r\n      variant: variant,\r\n      ...listSlotProps,\r\n      children: children\r\n    })\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * An HTML element, or a function that returns one.\r\n   * It's used to set the position of the menu.\r\n   */\r\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\r\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   * @default true\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   * @default false\r\n   */\r\n  disableAutoFocusItem: PropTypes.bool,\r\n  /**\r\n   * Props applied to the [`MenuList`](https://mui.com/material-ui/api/menu-list/) element.\r\n   * @deprecated use the `slotProps.list` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\r\n   * @default {}\r\n   */\r\n  MenuListProps: PropTypes.object,\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  PaperProps: PropTypes.object,\r\n  /**\r\n   * `classes` prop applied to the [`Popover`](https://mui.com/material-ui/api/popover/) element.\r\n   */\r\n  PopoverClasses: PropTypes.object,\r\n  /**\r\n   * The props used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    backdrop: PropTypes.elementType,\r\n    list: PropTypes.elementType,\r\n    paper: PropTypes.elementType,\r\n    root: PropTypes.elementType,\r\n    transition: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   * @default 'auto'\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\r\n   * @deprecated use the `slotProps.transition` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\r\n   * @default {}\r\n   */\r\n  TransitionProps: PropTypes.object,\r\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\r\n   * @default 'selectedMenu'\r\n   */\r\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\r\n} : void 0;\r\nexport default Menu;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}